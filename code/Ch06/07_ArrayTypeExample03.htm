<!DOCTYPE html>
<html>
<head>
    <title>Array Type Example 2</title>
    <script type="text/javascript">

        // 字符串会被拆分为单字符数组
        alert(Array.from("Matt")); // ["M", "a", "t", "t"]

        // 可以使用 from()将集合和映射转换为一个新数组
        const m = new Map().set(1, 2)
            .set(3, 4);
        const s = new Set().add(1)
            .add(2)
            .add(3)
            .add(4);
        console.log(Array.from(m)); // [[1, 2], [3, 4]]
        alert(Array.from(s)); // [1, 2, 3, 4]

        // Array.from()对现有数组执行浅复制
        const a1 = [1, 2, 3, 4];
        const a2 = Array.from(a1);
        alert(a1); // [1, 2, 3, 4] 
        alert(a1 === a2); // false

        // 可以使用任何可迭代对象
        const iter = {
            *[Symbol.iterator]() {
                yield 1;
                yield 2;
                yield 3;
                yield 4;
            }
        };
        alert(Array.from(iter)); // [1, 2, 3, 4]

        // arguments 对象可以被轻松地转换为数组
        function getArgsArray() {
            return Array.from(arguments);
        }
        alert(getArgsArray(1, 2, 3, 4)); // [1, 2, 3, 4]

        // from()也能转换带有必要属性的自定义对象
        const arrayLikeObject = {
            0: 1,
            1: 2,
            2: 3,
            3: 4,
            length: 4
        };
        alert(Array.from(arrayLikeObject)); // [1, 2, 3, 4]


    </script>
</head>
<body>

</body>
</html>